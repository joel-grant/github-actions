name: Test and Lint Rails
on:
  workflow_call:
    inputs:
      repo_name:
        description: 'Repository name for RubyCritic report URL'
        required: true
        type: string
      ruby_version:
        description: 'Ruby version to use (defaults to .ruby-version file)'
        required: false
        type: string
        default: '.ruby-version'
      rails_env:
        description: 'Rails environment'
        required: false
        type: string
        default: 'test'
      postgres_version:
        description: 'PostgreSQL version'
        required: false
        type: string
        default: '14.12-alpine'
      postgres_db:
        description: 'PostgreSQL database name'
        required: false
        type: string
        default: 'rails_test'
      postgres_user:
        description: 'PostgreSQL username'
        required: false
        type: string
        default: 'rails'
      postgres_password:
        description: 'PostgreSQL password'
        required: false
        type: string
        default: 'password'
      skip_rubocop:
        description: 'Skip RuboCop linting'
        required: false
        type: boolean
        default: true
    secrets:
      dockerhub_username:
        description: 'DockerHub username'
        required: true
      dockerhub_token:
        description: 'DockerHub token'
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: ${{ inputs.rails_env }}
      DATABASE_URL: "postgres://${{ inputs.postgres_user }}:${{ inputs.postgres_password }}@localhost:5432/${{ inputs.postgres_db }}"
    services:
      postgres:
        image: postgres:${{ inputs.postgres_version }}
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: ${{ inputs.postgres_db }}
          POSTGRES_USER: ${{ inputs.postgres_user }}
          POSTGRES_PASSWORD: ${{ inputs.postgres_password }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@1.234.0
        with:
          ruby-version: ${{ inputs.ruby_version }}
          bundler-cache: true
      - name: Set up database schema
        run: bin/rails db:schema:load
      - name: Run tests
        run: bin/rake

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@1.234.0
        with:
          ruby-version: ${{ inputs.ruby_version }}
          bundler-cache: true
      - name: Resolve bundler with binstubs
        run: bundle binstubs bundler --force
      - name: Generate binstubs
        run: bundle binstubs bundler-audit brakeman rubocop
      - name: Security audit dependencies
        run: bin/bundler-audit --update
      - name: Security audit application code
        run: bin/brakeman -q -w2
      - name: Lint Ruby files
        if: ${{ !inputs.skip_rubocop }}
        run: bin/rubocop --parallel
    
  ruby-critic:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
     
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ inputs.ruby_version }}
          bundler-cache: true
          
      - name: Fetch all branches
        run: git fetch

      - name: Run RubyCritic
        if: github.ref != 'refs/heads/main'
        run: |
          bundle exec rubycritic --mode-ci --no-browser

      - name: Upload RubyCritic report
        if: always() && github.ref != 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: rubycritic-report
          path: tmp/rubycritic

      - name: Deploy RubyCritic report to GitHub Pages
        if: always() && github.ref != 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./tmp/rubycritic
          publish_branch: gh-pages
      
      - name: View Job Output
        if: always()
        run: |
          echo "View Report: https://plant-coach.github.io/${{ inputs.repo_name }}/compare/main/overview.html"